I've tried to keep it fairly simple.

There is a Movie class, which holds the attributes which the imdb-api returns with the SearchMovie call
There is a Youtube class, which holds the title and the youtubelink
The Movie class also holds a Youtube object instance so the view can use this to generate the youtube link also

The ApiController is the API part.
It loads movies from the imdb-api, which return multiple movies per search, this is GetMovie
The index default is a top 100 api call, which I boil down to 10 movies, this is top10
Both methods also fetch Youtube-API data per movie that will be displayed
Sadly, my youtube-api limit has been reached today so the youtube links will not be containing the real links to the trailers

Fetching Movies by title returns multiple instances. In the scenario of a search, all results from imdb-api are returned and provided with a youtube link
With top10, the top10 are returned.
The Youtube link is generated by searching the youtube-api with the title and year from the imdb-api movie, plus "official trailer"
More API calls from imdb-api would have been needed to gain more info about the trailer to be searched, which doesn't always result in the best result

Youtube-api search returns 5 searches, and the first is chosen always. In the future this could be searched more to narrow down the real trailer, or to display more trailers

The MovieController is simple because it uses the ApiController methods
The MovieViewModel holds a List of Movies, which get iterated in the view

A JsonHelper has been made to help deserialize the imdb-api and youtube-api json string, because deserializing this input directly didn't work
so it had to be broken down into its elements

	Not implemented
Caching was not implemented yet, and I might update this today because it is interesting and it should be able to work
It is also needed because otherwise the API calls would go to its limit fairly quickly

I've wasted too much time on getting a popup video to work with Magnific-popup, which just wouldn't work
So a new tab will be opened by clicking on a movie poster, which will now open youtube without a link because the youtube-api is done for today

Also, the search bar is a great security risk because I haven't yet implemented that text should be filtered and constrained